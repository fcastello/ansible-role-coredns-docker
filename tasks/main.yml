---
- name: Install needed packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - python3-pip
      - python3-docker

- name: Create folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - "{{ coredns_config_dir }}/zones"

- name: Copy config file
  ansible.builtin.template:
    src: Corefile.j2
    dest: "{{ coredns_config_dir }}/Corefile"
    mode: '0644'
  register: result_config_file


- name: Generate configuration files from template
  ansible.builtin.template:
    src: zone.j2
    dest: "{{ coredns_config_dir }}/zones/{{ item.name }}.db"
    mode: '0644'
  loop: "{{ coredns_zones }}"
  register: result_zone_file


- name: Pull Coredns image before stoping systemd-resolved
  community.docker.docker_image:
    name: "{{ coredns_container_image }}"
    source: pull

- name: Disable Native Ubuntu DNS on host
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when:
    - ansible_distribution == "Ubuntu"

- name: Run coredns server
  community.docker.docker_container:
    name: "{{ coredns_container_name }}"
    image: "{{ coredns_container_image }}"
    restart_policy: always
    network_mode: host
    init: true
    command: -conf /config/Corefile
    volumes:
      - "{{ coredns_config_dir }}:/config"
    recreate: "{{ coredns_container_recreate or result_config_file.changed or result_zone_file.changed }}"

- name: Update Local Router resolv.conf
  ansible.builtin.template:
    src: resolv.j2
    dest: /etc/resolv.conf
    mode: '0644'